<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        v5F0PfCXmw6nAAAAAElFTkSuQmCC
</value>
  </data>
</root>